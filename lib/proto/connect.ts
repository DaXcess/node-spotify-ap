// @generated by protobuf-ts 2.0.6
// @generated from protobuf file "connect.proto" (package "connectstate", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
import { PlayerState } from "./player";
/**
 * @generated from protobuf message connectstate.ClusterUpdate
 */
export interface ClusterUpdate {
    /**
     * @generated from protobuf field: connectstate.Cluster cluster = 1;
     */
    cluster?: Cluster;
    /**
     * @generated from protobuf field: connectstate.ClusterUpdateReason update_reason = 2;
     */
    updateReason: ClusterUpdateReason;
    /**
     * @generated from protobuf field: string ack_id = 3;
     */
    ackId: string;
    /**
     * @generated from protobuf field: repeated string devices_that_changed = 4;
     */
    devicesThatChanged: string[];
}
/**
 * @generated from protobuf message connectstate.Device
 */
export interface Device {
    /**
     * @generated from protobuf field: connectstate.DeviceInfo device_info = 1;
     */
    deviceInfo?: DeviceInfo;
    /**
     * @generated from protobuf field: connectstate.PlayerState player_state = 2;
     */
    playerState?: PlayerState;
    /**
     * @generated from protobuf field: connectstate.PrivateDeviceInfo private_device_info = 3;
     */
    privateDeviceInfo?: PrivateDeviceInfo;
    /**
     * @generated from protobuf field: bytes transfer_data = 4;
     */
    transferData: Uint8Array; // TransferState
}
/**
 * @generated from protobuf message connectstate.Cluster
 */
export interface Cluster {
    /**
     * @generated from protobuf field: int64 timestamp = 1;
     */
    timestamp: bigint;
    /**
     * @generated from protobuf field: string active_device_id = 2;
     */
    activeDeviceId: string;
    /**
     * @generated from protobuf field: connectstate.PlayerState player_state = 3;
     */
    playerState?: PlayerState;
    /**
     * @generated from protobuf field: map<string, connectstate.DeviceInfo> device = 4;
     */
    device: {
        [key: string]: DeviceInfo;
    };
    /**
     * @generated from protobuf field: bytes transfer_data = 5;
     */
    transferData: Uint8Array;
    /**
     * @generated from protobuf field: uint64 transfer_data_timestamp = 6;
     */
    transferDataTimestamp: bigint;
    /**
     * @generated from protobuf field: int64 not_playing_since_timestamp = 7;
     */
    notPlayingSinceTimestamp: bigint;
    /**
     * @generated from protobuf field: bool need_full_player_state = 8;
     */
    needFullPlayerState: boolean;
    /**
     * @generated from protobuf field: int64 server_timestamp_ms = 9;
     */
    serverTimestampMs: bigint;
}
/**
 * @generated from protobuf message connectstate.PutStateRequest
 */
export interface PutStateRequest {
    /**
     * @generated from protobuf field: string callback_url = 1;
     */
    callbackUrl: string;
    /**
     * @generated from protobuf field: connectstate.Device device = 2;
     */
    device?: Device;
    /**
     * @generated from protobuf field: connectstate.MemberType member_type = 3;
     */
    memberType: MemberType;
    /**
     * @generated from protobuf field: bool is_active = 4;
     */
    isActive: boolean;
    /**
     * @generated from protobuf field: connectstate.PutStateReason put_state_reason = 5;
     */
    putStateReason: PutStateReason;
    /**
     * @generated from protobuf field: uint32 message_id = 6;
     */
    messageId: number;
    /**
     * @generated from protobuf field: string last_command_sent_by_device_id = 7;
     */
    lastCommandSentByDeviceId: string;
    /**
     * @generated from protobuf field: uint32 last_command_message_id = 8;
     */
    lastCommandMessageId: number;
    /**
     * @generated from protobuf field: uint64 started_playing_at = 9;
     */
    startedPlayingAt: bigint;
    /**
     * @generated from protobuf field: uint64 has_been_playing_for_ms = 11;
     */
    hasBeenPlayingForMs: bigint;
    /**
     * @generated from protobuf field: uint64 client_side_timestamp = 12;
     */
    clientSideTimestamp: bigint;
    /**
     * @generated from protobuf field: bool only_write_player_state = 13;
     */
    onlyWritePlayerState: boolean;
}
/**
 * @generated from protobuf message connectstate.PrivateDeviceInfo
 */
export interface PrivateDeviceInfo {
    /**
     * @generated from protobuf field: string platform = 1;
     */
    platform: string;
}
/**
 * @generated from protobuf message connectstate.SubscribeRequest
 */
export interface SubscribeRequest {
    /**
     * @generated from protobuf field: string callback_url = 1;
     */
    callbackUrl: string;
}
/**
 * @generated from protobuf message connectstate.DeviceInfo
 */
export interface DeviceInfo {
    /**
     * @generated from protobuf field: bool can_play = 1;
     */
    canPlay: boolean;
    /**
     * @generated from protobuf field: uint32 volume = 2;
     */
    volume: number;
    /**
     * @generated from protobuf field: string name = 3;
     */
    name: string;
    /**
     * @generated from protobuf field: connectstate.Capabilities capabilities = 4;
     */
    capabilities?: Capabilities;
    /**
     * @generated from protobuf field: string device_software_version = 6;
     */
    deviceSoftwareVersion: string;
    /**
     * @generated from protobuf field: connectstate.DeviceType device_type = 7;
     */
    deviceType: DeviceType;
    /**
     * @generated from protobuf field: string spirc_version = 9;
     */
    spircVersion: string;
    /**
     * @generated from protobuf field: string device_id = 10;
     */
    deviceId: string;
    /**
     * @generated from protobuf field: bool is_private_session = 11;
     */
    isPrivateSession: boolean;
    /**
     * @generated from protobuf field: bool is_social_connect = 12;
     */
    isSocialConnect: boolean;
    /**
     * @generated from protobuf field: string client_id = 13;
     */
    clientId: string;
    /**
     * @generated from protobuf field: string brand = 14;
     */
    brand: string;
    /**
     * @generated from protobuf field: string model = 15;
     */
    model: string;
    /**
     * @generated from protobuf field: map<string, string> metadata_map = 16;
     */
    metadataMap: {
        [key: string]: string;
    };
    /**
     * @generated from protobuf field: string product_id = 17;
     */
    productId: string;
    /**
     * @generated from protobuf field: string deduplication_id = 18;
     */
    deduplicationId: string;
    /**
     * @generated from protobuf field: uint32 selected_alias_id = 19;
     */
    selectedAliasId: number;
    /**
     * @generated from protobuf field: repeated connectstate.DeviceInfo.DeviceAliasesEntry device_aliases = 20;
     */
    deviceAliases: DeviceInfo_DeviceAliasesEntry[];
    /**
     * @generated from protobuf field: bool is_offline = 21;
     */
    isOffline: boolean;
    /**
     * @generated from protobuf field: string public_ip = 22;
     */
    publicIp: string;
    /**
     * @generated from protobuf field: string license = 23;
     */
    license: string;
}
/**
 * @generated from protobuf message connectstate.DeviceInfo.DeviceAliasesEntry
 */
export interface DeviceInfo_DeviceAliasesEntry {
    /**
     * @generated from protobuf field: uint32 key = 1;
     */
    key: number;
    /**
     * @generated from protobuf field: connectstate.DeviceAlias value = 2;
     */
    value?: DeviceAlias;
}
/**
 * @generated from protobuf message connectstate.DeviceAlias
 */
export interface DeviceAlias {
    /**
     * @generated from protobuf field: uint32 id = 1;
     */
    id: number;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * @generated from protobuf field: bool is_group = 3;
     */
    isGroup: boolean;
}
/**
 * @generated from protobuf message connectstate.Capabilities
 */
export interface Capabilities {
    /**
     * @generated from protobuf field: bool can_be_player = 2;
     */
    canBePlayer: boolean;
    /**
     * @generated from protobuf field: bool restrict_to_local = 3;
     */
    restrictToLocal: boolean;
    /**
     * @generated from protobuf field: bool gaia_eq_connect_id = 5;
     */
    gaiaEqConnectId: boolean;
    /**
     * @generated from protobuf field: bool supports_logout = 6;
     */
    supportsLogout: boolean;
    /**
     * @generated from protobuf field: bool is_observable = 7;
     */
    isObservable: boolean;
    /**
     * @generated from protobuf field: int32 volume_steps = 8;
     */
    volumeSteps: number;
    /**
     * @generated from protobuf field: repeated string supported_types = 9;
     */
    supportedTypes: string[];
    /**
     * @generated from protobuf field: bool command_acks = 10;
     */
    commandAcks: boolean;
    /**
     * @generated from protobuf field: bool supports_rename = 11;
     */
    supportsRename: boolean;
    /**
     * @generated from protobuf field: bool hidden = 12;
     */
    hidden: boolean;
    /**
     * @generated from protobuf field: bool disable_volume = 13;
     */
    disableVolume: boolean;
    /**
     * @generated from protobuf field: bool connect_disabled = 14;
     */
    connectDisabled: boolean;
    /**
     * @generated from protobuf field: bool supports_playlist_v2 = 15;
     */
    supportsPlaylistV2: boolean;
    /**
     * @generated from protobuf field: bool is_controllable = 16;
     */
    isControllable: boolean;
    /**
     * @generated from protobuf field: bool supports_external_episodes = 17;
     */
    supportsExternalEpisodes: boolean;
    /**
     * @generated from protobuf field: bool supports_set_backend_metadata = 18;
     */
    supportsSetBackendMetadata: boolean;
    /**
     * @generated from protobuf field: bool supports_transfer_command = 19;
     */
    supportsTransferCommand: boolean;
    /**
     * @generated from protobuf field: bool supports_command_request = 20;
     */
    supportsCommandRequest: boolean;
    /**
     * @generated from protobuf field: bool is_voice_enabled = 21;
     */
    isVoiceEnabled: boolean;
    /**
     * @generated from protobuf field: bool needs_full_player_state = 22;
     */
    needsFullPlayerState: boolean;
    /**
     * @generated from protobuf field: bool supports_gzip_pushes = 23;
     */
    supportsGzipPushes: boolean;
    /**
     * @generated from protobuf field: bool supports_lossless_audio = 24;
     */
    supportsLosslessAudio: boolean;
    /**
     * @generated from protobuf field: bool supports_set_options_command = 25;
     */
    supportsSetOptionsCommand: boolean;
    /**
     * @generated from protobuf field: connectstate.CapabilitySupportDetails supports_hifi = 26;
     */
    supportsHifi?: CapabilitySupportDetails; // reserved 1, "supported_contexts";
}
/**
 * @generated from protobuf message connectstate.CapabilitySupportDetails
 */
export interface CapabilitySupportDetails {
    /**
     * @generated from protobuf field: bool fully_supported = 1;
     */
    fullySupported: boolean;
    /**
     * @generated from protobuf field: bool user_eligible = 2;
     */
    userEligible: boolean;
    /**
     * @generated from protobuf field: bool device_supported = 3;
     */
    deviceSupported: boolean;
}
/**
 * @generated from protobuf message connectstate.ConnectCommandOptions
 */
export interface ConnectCommandOptions {
    /**
     * @generated from protobuf field: int32 message_id = 1;
     */
    messageId: number;
}
/**
 * @generated from protobuf message connectstate.LogoutCommand
 */
export interface LogoutCommand {
    /**
     * @generated from protobuf field: connectstate.ConnectCommandOptions command_options = 1;
     */
    commandOptions?: ConnectCommandOptions;
}
/**
 * @generated from protobuf message connectstate.SetVolumeCommand
 */
export interface SetVolumeCommand {
    /**
     * @generated from protobuf field: int32 volume = 1;
     */
    volume: number;
    /**
     * @generated from protobuf field: connectstate.ConnectCommandOptions command_options = 2;
     */
    commandOptions?: ConnectCommandOptions;
}
/**
 * @generated from protobuf message connectstate.RenameCommand
 */
export interface RenameCommand {
    /**
     * @generated from protobuf field: string rename_to = 1;
     */
    renameTo: string;
    /**
     * @generated from protobuf field: connectstate.ConnectCommandOptions command_options = 2;
     */
    commandOptions?: ConnectCommandOptions;
}
/**
 * @generated from protobuf message connectstate.SetBackendMetadataCommand
 */
export interface SetBackendMetadataCommand {
    /**
     * @generated from protobuf field: map<string, string> metadata = 1;
     */
    metadata: {
        [key: string]: string;
    };
}
/**
 * @generated from protobuf enum connectstate.SendCommandResult
 */
export enum SendCommandResult {
    /**
     * @generated from protobuf enum value: UNKNOWN_SEND_COMMAND_RESULT = 0;
     */
    UNKNOWN_SEND_COMMAND_RESULT = 0,
    /**
     * @generated from protobuf enum value: SUCCESS = 1;
     */
    SUCCESS = 1,
    /**
     * @generated from protobuf enum value: DEVICE_NOT_FOUND = 2;
     */
    DEVICE_NOT_FOUND = 2,
    /**
     * @generated from protobuf enum value: CONTEXT_PLAYER_ERROR = 3;
     */
    CONTEXT_PLAYER_ERROR = 3,
    /**
     * @generated from protobuf enum value: DEVICE_DISAPPEARED = 4;
     */
    DEVICE_DISAPPEARED = 4,
    /**
     * @generated from protobuf enum value: UPSTREAM_ERROR = 5;
     */
    UPSTREAM_ERROR = 5,
    /**
     * @generated from protobuf enum value: DEVICE_DOES_NOT_SUPPORT_COMMAND = 6;
     */
    DEVICE_DOES_NOT_SUPPORT_COMMAND = 6,
    /**
     * @generated from protobuf enum value: RATE_LIMITED = 7;
     */
    RATE_LIMITED = 7
}
/**
 * @generated from protobuf enum connectstate.PutStateReason
 */
export enum PutStateReason {
    /**
     * @generated from protobuf enum value: UNKNOWN_PUT_STATE_REASON = 0;
     */
    UNKNOWN_PUT_STATE_REASON = 0,
    /**
     * @generated from protobuf enum value: SPIRC_HELLO = 1;
     */
    SPIRC_HELLO = 1,
    /**
     * @generated from protobuf enum value: SPIRC_NOTIFY = 2;
     */
    SPIRC_NOTIFY = 2,
    /**
     * @generated from protobuf enum value: NEW_DEVICE = 3;
     */
    NEW_DEVICE = 3,
    /**
     * @generated from protobuf enum value: PLAYER_STATE_CHANGED = 4;
     */
    PLAYER_STATE_CHANGED = 4,
    /**
     * @generated from protobuf enum value: VOLUME_CHANGED = 5;
     */
    VOLUME_CHANGED = 5,
    /**
     * @generated from protobuf enum value: PICKER_OPENED = 6;
     */
    PICKER_OPENED = 6,
    /**
     * @generated from protobuf enum value: BECAME_INACTIVE = 7;
     */
    BECAME_INACTIVE = 7,
    /**
     * @generated from protobuf enum value: ALIAS_CHANGED = 8;
     */
    ALIAS_CHANGED = 8
}
/**
 * @generated from protobuf enum connectstate.MemberType
 */
export enum MemberType {
    /**
     * @generated from protobuf enum value: SPIRC_V2 = 0;
     */
    SPIRC_V2 = 0,
    /**
     * @generated from protobuf enum value: SPIRC_V3 = 1;
     */
    SPIRC_V3 = 1,
    /**
     * @generated from protobuf enum value: CONNECT_STATE = 2;
     */
    CONNECT_STATE = 2,
    /**
     * @generated from protobuf enum value: CONNECT_STATE_EXTENDED = 5;
     */
    CONNECT_STATE_EXTENDED = 5,
    /**
     * @generated from protobuf enum value: ACTIVE_DEVICE_TRACKER = 6;
     */
    ACTIVE_DEVICE_TRACKER = 6,
    /**
     * @generated from protobuf enum value: PLAY_TOKEN = 7;
     */
    PLAY_TOKEN = 7
}
/**
 * @generated from protobuf enum connectstate.ClusterUpdateReason
 */
export enum ClusterUpdateReason {
    /**
     * @generated from protobuf enum value: UNKNOWN_CLUSTER_UPDATE_REASON = 0;
     */
    UNKNOWN_CLUSTER_UPDATE_REASON = 0,
    /**
     * @generated from protobuf enum value: DEVICES_DISAPPEARED = 1;
     */
    DEVICES_DISAPPEARED = 1,
    /**
     * @generated from protobuf enum value: DEVICE_STATE_CHANGED = 2;
     */
    DEVICE_STATE_CHANGED = 2,
    /**
     * @generated from protobuf enum value: NEW_DEVICE_APPEARED = 3;
     */
    NEW_DEVICE_APPEARED = 3,
    /**
     * @generated from protobuf enum value: DEVICE_VOLUME_CHANGED = 4;
     */
    DEVICE_VOLUME_CHANGED = 4,
    /**
     * @generated from protobuf enum value: DEVICE_ALIAS_CHANGED = 5;
     */
    DEVICE_ALIAS_CHANGED = 5
}
/**
 * @generated from protobuf enum connectstate.DeviceType
 */
export enum DeviceType {
    /**
     * @generated from protobuf enum value: UNKNOWN = 0;
     */
    UNKNOWN = 0,
    /**
     * @generated from protobuf enum value: COMPUTER = 1;
     */
    COMPUTER = 1,
    /**
     * @generated from protobuf enum value: TABLET = 2;
     */
    TABLET = 2,
    /**
     * @generated from protobuf enum value: SMARTPHONE = 3;
     */
    SMARTPHONE = 3,
    /**
     * @generated from protobuf enum value: SPEAKER = 4;
     */
    SPEAKER = 4,
    /**
     * @generated from protobuf enum value: TV = 5;
     */
    TV = 5,
    /**
     * @generated from protobuf enum value: AVR = 6;
     */
    AVR = 6,
    /**
     * @generated from protobuf enum value: STB = 7;
     */
    STB = 7,
    /**
     * @generated from protobuf enum value: AUDIO_DONGLE = 8;
     */
    AUDIO_DONGLE = 8,
    /**
     * @generated from protobuf enum value: GAME_CONSOLE = 9;
     */
    GAME_CONSOLE = 9,
    /**
     * @generated from protobuf enum value: CAST_VIDEO = 10;
     */
    CAST_VIDEO = 10,
    /**
     * @generated from protobuf enum value: CAST_AUDIO = 11;
     */
    CAST_AUDIO = 11,
    /**
     * @generated from protobuf enum value: AUTOMOBILE = 12;
     */
    AUTOMOBILE = 12,
    /**
     * @generated from protobuf enum value: SMARTWATCH = 13;
     */
    SMARTWATCH = 13,
    /**
     * @generated from protobuf enum value: CHROMEBOOK = 14;
     */
    CHROMEBOOK = 14,
    /**
     * @generated from protobuf enum value: UNKNOWN_SPOTIFY = 100;
     */
    UNKNOWN_SPOTIFY = 100,
    /**
     * @generated from protobuf enum value: CAR_THING = 101;
     */
    CAR_THING = 101,
    /**
     * @generated from protobuf enum value: OBSERVER = 102;
     */
    OBSERVER = 102,
    /**
     * @generated from protobuf enum value: HOME_THING = 103;
     */
    HOME_THING = 103
}
// @generated message type with reflection information, may provide speed optimized methods
class ClusterUpdate$Type extends MessageType<ClusterUpdate> {
    constructor() {
        super("connectstate.ClusterUpdate", [
            { no: 1, name: "cluster", kind: "message", T: () => Cluster },
            { no: 2, name: "update_reason", kind: "enum", T: () => ["connectstate.ClusterUpdateReason", ClusterUpdateReason] },
            { no: 3, name: "ack_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "devices_that_changed", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message connectstate.ClusterUpdate
 */
export const ClusterUpdate = new ClusterUpdate$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Device$Type extends MessageType<Device> {
    constructor() {
        super("connectstate.Device", [
            { no: 1, name: "device_info", kind: "message", T: () => DeviceInfo },
            { no: 2, name: "player_state", kind: "message", T: () => PlayerState },
            { no: 3, name: "private_device_info", kind: "message", T: () => PrivateDeviceInfo },
            { no: 4, name: "transfer_data", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message connectstate.Device
 */
export const Device = new Device$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Cluster$Type extends MessageType<Cluster> {
    constructor() {
        super("connectstate.Cluster", [
            { no: 1, name: "timestamp", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "active_device_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "player_state", kind: "message", T: () => PlayerState },
            { no: 4, name: "device", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "message", T: () => DeviceInfo } },
            { no: 5, name: "transfer_data", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 6, name: "transfer_data_timestamp", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "not_playing_since_timestamp", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "need_full_player_state", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "server_timestamp_ms", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message connectstate.Cluster
 */
export const Cluster = new Cluster$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PutStateRequest$Type extends MessageType<PutStateRequest> {
    constructor() {
        super("connectstate.PutStateRequest", [
            { no: 1, name: "callback_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "device", kind: "message", T: () => Device },
            { no: 3, name: "member_type", kind: "enum", T: () => ["connectstate.MemberType", MemberType] },
            { no: 4, name: "is_active", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "put_state_reason", kind: "enum", T: () => ["connectstate.PutStateReason", PutStateReason] },
            { no: 6, name: "message_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "last_command_sent_by_device_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "last_command_message_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "started_playing_at", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 11, name: "has_been_playing_for_ms", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 12, name: "client_side_timestamp", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 13, name: "only_write_player_state", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message connectstate.PutStateRequest
 */
export const PutStateRequest = new PutStateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PrivateDeviceInfo$Type extends MessageType<PrivateDeviceInfo> {
    constructor() {
        super("connectstate.PrivateDeviceInfo", [
            { no: 1, name: "platform", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message connectstate.PrivateDeviceInfo
 */
export const PrivateDeviceInfo = new PrivateDeviceInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SubscribeRequest$Type extends MessageType<SubscribeRequest> {
    constructor() {
        super("connectstate.SubscribeRequest", [
            { no: 1, name: "callback_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message connectstate.SubscribeRequest
 */
export const SubscribeRequest = new SubscribeRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeviceInfo$Type extends MessageType<DeviceInfo> {
    constructor() {
        super("connectstate.DeviceInfo", [
            { no: 1, name: "can_play", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "volume", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "capabilities", kind: "message", T: () => Capabilities },
            { no: 6, name: "device_software_version", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "device_type", kind: "enum", T: () => ["connectstate.DeviceType", DeviceType] },
            { no: 9, name: "spirc_version", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "device_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "is_private_session", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 12, name: "is_social_connect", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 13, name: "client_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "brand", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "model", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 16, name: "metadata_map", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } },
            { no: 17, name: "product_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 18, name: "deduplication_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 19, name: "selected_alias_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 20, name: "device_aliases", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DeviceInfo_DeviceAliasesEntry },
            { no: 21, name: "is_offline", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 22, name: "public_ip", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 23, name: "license", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message connectstate.DeviceInfo
 */
export const DeviceInfo = new DeviceInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeviceInfo_DeviceAliasesEntry$Type extends MessageType<DeviceInfo_DeviceAliasesEntry> {
    constructor() {
        super("connectstate.DeviceInfo.DeviceAliasesEntry", [
            { no: 1, name: "key", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "value", kind: "message", T: () => DeviceAlias }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message connectstate.DeviceInfo.DeviceAliasesEntry
 */
export const DeviceInfo_DeviceAliasesEntry = new DeviceInfo_DeviceAliasesEntry$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeviceAlias$Type extends MessageType<DeviceAlias> {
    constructor() {
        super("connectstate.DeviceAlias", [
            { no: 1, name: "id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "is_group", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message connectstate.DeviceAlias
 */
export const DeviceAlias = new DeviceAlias$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Capabilities$Type extends MessageType<Capabilities> {
    constructor() {
        super("connectstate.Capabilities", [
            { no: 2, name: "can_be_player", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "restrict_to_local", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "gaia_eq_connect_id", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "supports_logout", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "is_observable", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 8, name: "volume_steps", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "supported_types", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "command_acks", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 11, name: "supports_rename", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 12, name: "hidden", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 13, name: "disable_volume", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 14, name: "connect_disabled", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 15, name: "supports_playlist_v2", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 16, name: "is_controllable", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 17, name: "supports_external_episodes", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 18, name: "supports_set_backend_metadata", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 19, name: "supports_transfer_command", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 20, name: "supports_command_request", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 21, name: "is_voice_enabled", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 22, name: "needs_full_player_state", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 23, name: "supports_gzip_pushes", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 24, name: "supports_lossless_audio", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 25, name: "supports_set_options_command", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 26, name: "supports_hifi", kind: "message", T: () => CapabilitySupportDetails }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message connectstate.Capabilities
 */
export const Capabilities = new Capabilities$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CapabilitySupportDetails$Type extends MessageType<CapabilitySupportDetails> {
    constructor() {
        super("connectstate.CapabilitySupportDetails", [
            { no: 1, name: "fully_supported", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "user_eligible", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "device_supported", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message connectstate.CapabilitySupportDetails
 */
export const CapabilitySupportDetails = new CapabilitySupportDetails$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ConnectCommandOptions$Type extends MessageType<ConnectCommandOptions> {
    constructor() {
        super("connectstate.ConnectCommandOptions", [
            { no: 1, name: "message_id", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message connectstate.ConnectCommandOptions
 */
export const ConnectCommandOptions = new ConnectCommandOptions$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LogoutCommand$Type extends MessageType<LogoutCommand> {
    constructor() {
        super("connectstate.LogoutCommand", [
            { no: 1, name: "command_options", kind: "message", T: () => ConnectCommandOptions }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message connectstate.LogoutCommand
 */
export const LogoutCommand = new LogoutCommand$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetVolumeCommand$Type extends MessageType<SetVolumeCommand> {
    constructor() {
        super("connectstate.SetVolumeCommand", [
            { no: 1, name: "volume", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "command_options", kind: "message", T: () => ConnectCommandOptions }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message connectstate.SetVolumeCommand
 */
export const SetVolumeCommand = new SetVolumeCommand$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RenameCommand$Type extends MessageType<RenameCommand> {
    constructor() {
        super("connectstate.RenameCommand", [
            { no: 1, name: "rename_to", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "command_options", kind: "message", T: () => ConnectCommandOptions }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message connectstate.RenameCommand
 */
export const RenameCommand = new RenameCommand$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetBackendMetadataCommand$Type extends MessageType<SetBackendMetadataCommand> {
    constructor() {
        super("connectstate.SetBackendMetadataCommand", [
            { no: 1, name: "metadata", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message connectstate.SetBackendMetadataCommand
 */
export const SetBackendMetadataCommand = new SetBackendMetadataCommand$Type();
